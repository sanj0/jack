tape = list[int]
head_index = 50
for (i = 0; i 100 <; i = {i++}) {
    tape 0 push
}

loop {
    code = readln_as_list
    l = { code len }
    for (idx = 0; idx l <; idx = {idx ++}) {
        c = { code idx get }
        c switch {
            '+' => {
                val = { tape head_index get ++ }
                tape head_index val set
            }
            '-' => {
                val = { tape head_index get -- }
                tape head_index val set
            }
            '<' => head_index = { head_index-- }
            '>' => {
                head_index = { head_index++ }
                ensure_capacity
            }
            '.' => {
                tape head_index get printc
            }
            ',' => {
                input = { readln @charlist 0 get }
                tape head_index input set
            }
            '[' => if (tape head_index get 0 ==) {
                shift = 1
                find_matching_bracket
            }
            ']' => if (tape head_index get) {
                shift = { 0 -- } // forgot negative number literals lol
                find_matching_bracket
            }
            default => {}
        }
    }
}

// needs `shift` variable
macro find_matching_bracket
    d = 1
    while (d 0 >) {
        idx = { idx shift + }
        c = { code idx get }
        d = if (c '[' ==) {
            d shift +
        } else if (c ']' ==) {
            d shift -
        } else d
    }
;;

macro ensure_capacity
    if (head_index tape len >=) {
        _e_c_len = { tape len }
        for (_e_c_i = 0; _e_c_i _e_c_len <; _e_c_i = {_e_c_i++}) {
            tape 0 push
        }
    }
;;

#include std.jack
